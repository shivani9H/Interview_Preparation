Problem Statement:
Merge two sorted linked lists and return it as a new sorted list. The new list should be made by splicing together the nodes of the first two lists.
You can practice Here(https://leetcode.com/problems/merge-two-sorted-lists/)

Approach:
We can solve this question iteratively or recusively
1:- Lets first solve using iteratively. its is same as we use to merge two array. 

        // ListNode* head=new ListNode(10);/////////iterative 
        // ListNode* cur=head;
        // while(l1&&l2)
        // {    
        //     if(l1->val<l2->val)
        //        { cur->next=l1;
        //         cur=cur->next;
        //          l1=l1->next;
        //        }
        //     else
        //     {
        //         cur->next=l2;
        //         cur=cur->next;
        //         l2=l2->next;
        //     }
        // }
        // if(l1)
        //     cur->next=l1;
        // if(l2)
        //     cur->next=l2;
        // return head->next;
        
2:Recusive Approach
 ListNode* solve(ListNode* l1,ListNode* l2)
    {
        if(!l1)
            return l2;
        if(!l2)
            return l1;
        ListNode* c;
        if(l1->val<l2->val)
        {
            c=l1;
            c->next=solve(l1->next,l2);
        }
        else
        {
            c=l2;
            c->next=solve(l1,l2->next);
        }
        return c;
    }

